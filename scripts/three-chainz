#!/bin/bash
set -x

SCRIPTDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
CONFIG_DATA="$(pwd)/data"

# Ensure gaiad is installed
if ! [ -x "$(which gaiad)" ]; then
  echo "Error: gaiad is not installed. Try running 'make build-gaia'" >&2
  exit 1
fi

# Ensure sommelier is installed
if ! [ -x "$(which sommelier)" ]; then
  echo "Error: sommelier is not installed. Try running 'make build-somm'" >&2
  exit 1
fi

# Display software version for testers
echo "GAIA VERSION INFO:"
gaiad version --long

echo "SOMMELIER VERSION INFO:"
sommelier version --long

# Ensure jq is installed
if [[ ! -x "$(which jq)" ]]; then
  echo "jq (a tool for parsing json in the command line) is required..."
  echo "https://stedolan.github.io/jq/download/"
  exit 1
fi

# Ensure user understands what will be deleted
if [[ -d $CONFIG_DATA ]] && [[ ! "$1" == "skip" ]]; then
  read -p "$(basename $0) will delete \$(pwd)/data folders. Do you wish to continue? (y/n): " -n 1 -r
  echo
  if [[ ! $REPLY =~ ^[Yy]$ ]]; then
      exit 1
  fi
fi

# Delete data from old runs
rm -rf $CONFIG_DATA &> /dev/null

# Stop existing gaiad processes
killall gaiad &> /dev/null
killall sommelier &> /dev/null

# set -e

chainid0=ibc-0
chainid1=ibc-1
chainid2=ibc-2

# Spin up the 3 chain instances
echo "Generating chain configurations..."
mkdir -p $CONFIG_DATA && cd $CONFIG_DATA && cd ../
./scripts/one-chain sommelier     $chainid0 ./data 26657 26656 6060 9090 1122
./scripts/one-chain gaiad         $chainid1 ./data 26557 26556 6061 9900 1212
./scripts/one-chain sommelier     $chainid2 ./data 25557 25556 6062 9990 2211

[ -f $CONFIG_DATA/$chainid0.log ] && echo "$chainid0 initialized. Watch file $CONFIG_DATA/$chainid0.log to see its execution."
[ -f $CONFIG_DATA/$chainid1.log ] && echo "$chainid1 initialized. Watch file $CONFIG_DATA/$chainid1.log to see its execution."
[ -f $CONFIG_DATA/$chainid2.log ] && echo "$chainid2 initialized. Watch file $CONFIG_DATA/$chainid2.log to see its execution."

# Spin up the 2 relayer instances
./scripts/two-relayers
# [ -f $CONFIG_DATA/$rlyid0.log ] && echo "$rlyid0 initialized. Watch file $CONFIG_DATA/$rlyid0.log to see its execution."
# [ -f $CONFIG_DATA/$rlyid1.log ] && echo "$rlyid1 initialized. Watch file $CONFIG_DATA/$rlyid1.log to see its execution."
